{{- $fullName := include "fhir-server.fullname" . -}}
{{- $dbservicename := printf "%s-mssql" $fullName }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fhir-server.fullname" . }}
  labels:
    {{- include "fhir-server.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "fhir-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "fhir-server.selectorLabels" . | nindent 8 }}
        {{- if .Values.podIdentity.enabled }}
        aadpodidbinding: {{ include "fhir-server.fullname" . }}
        {{- end}}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      automountServiceAccountToken: false
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ASPNETCORE_FORWARDEDHEADERS_ENABLED
              value: "true"
            {{- if .Values.convertData.enabled }}
            - name: FhirServer__Operations__ConvertData__Enabled
              value: "true"
            {{- end }}
            {{- if .Values.export.enabled }}
            - name: FhirServer__Operations__Export__Enabled
              value: "true"
            - name: FhirServer__Operations__Export__StorageAccountUri
              value: {{ .Values.export.blobStorageUri | quote }}
            {{- end }}
            {{- if .Values.reindex.enabled }}
            - name: FhirServer__Operations__Reindex__Enabled
              value: "true"
            {{- end }}
            {{- if .Values.serviceMonitor.enabled }}
            - name: PrometheusMetrics__enabled
              value: "true"
            - name: PrometheusMetrics__port
              value: {{ .Values.serviceMonitor.port | quote }}
            - name: PrometheusMetrics__dotnetRuntimeMetrics
              value: {{ .Values.serviceMonitor.dotnetRuntimeMetrics | quote }}
            - name: PrometheusMetrics__httpMetrics
              value: {{ .Values.serviceMonitor.httpMetrics | quote }}
            - name: PrometheusMetrics__systemMetrics
              value: {{ .Values.serviceMonitor.systemMetrics | quote }}
            {{- end }}
            {{- if .Values.appInsights.secretName }}
            - name: ApplicationInsights__InstrumentationKey
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.appInsights.secretName }}
                  key: {{ .Values.appInsights.secretKey }}
            {{- end }}
            - name: FhirServer__Security__Enabled
              value: {{ .Values.security.enabled | quote }}
            - name: FhirServer__Security__EnableAadSmartOnFhirProxy
              value: {{ .Values.security.enableAadSmartOnFhirProxy | quote }}
              {{- if .Values.security.authority }}
            - name: FhirServer__Security__Authentication__Authority
              value: {{ .Values.security.authority | lower | quote }}
              {{- end }}
              {{- if .Values.security.audience }}
            - name: FhirServer__Security__Authentication__Audience
              value: {{ .Values.security.audience | lower | quote }}
              {{- end }}
            {{- if eq .Values.database.dataStore "SqlServer" }}
            - name: DataStore
              value: "SqlServer"
            - name: SqlServer__AllowDatabaseCreation
              value: "true"
            - name: SqlServer__Initialize
              value: "true"
            - name: SqlServer__SchemaOptions__AutomaticUpdatesEnabled
              value: {{ .Values.database.sql.schema.automaticUpdatesEnabled | quote }}
            - name: DATABASESERVERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "fhir-server.fullname" . }}
                  key: fullyQualifiedServerName
            - name: DATABASEUSERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "fhir-server.fullname" . }}
                  key: username
            - name: DATABASEPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "fhir-server.fullname" . }}
                  key: password
            - name: DATABASENAME
              value: {{ include "fhir-server.fullname" . }}
            - name: MAX_POOL_SIZE
              value: {{ .Values.database.sql.maxPoolSize | quote }}
            - name: SqlServer__ConnectionString
              value: "Server=tcp:$(DATABASESERVERNAME),1433;Initial Catalog=$(DATABASENAME);Persist Security Info=False;User ID=$(DATABASEUSERNAME);Password=$(DATABASEPASSWORD);MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;Max Pool Size=$(MAX_POOL_SIZE)"
            {{- end }}
            {{- if eq .Values.database.dataStore "SqlContainer" }}
            - name: DataStore
              value: "SqlServer"
            - name: SqlServer__AllowDatabaseCreation
              value: "true"
            - name: SqlServer__Initialize
              value: "true"
            - name: SqlServer__SchemaOptions__AutomaticUpdatesEnabled
              value: {{ .Values.database.sql.schema.automaticUpdatesEnabled | quote }}
            - name: DATABASEUSERNAME
              value: {{ .Values.database.sqlContainer.userName }}
            - name: DATABASEPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $dbservicename }}
                  key: sapassword
            - name: DATABASENAME
              value: {{ .Values.database.sqlContainer.databaseName }}
            - name: DATABASESERVERNAME
              value: {{ $dbservicename }}
            - name: SqlServer__ConnectionString
              value: "Server=tcp:$(DATABASESERVERNAME),1433;Initial Catalog=$(DATABASENAME);Persist Security Info=False;User ID=$(DATABASEUSERNAME);Password=$(DATABASEPASSWORD);MultipleActiveResultSets=False;Connection Timeout=30"
            {{- end }}
            {{- if eq .Values.database.dataStore "ExistingSqlServer" }}
            - name: DataStore
              value: "SqlServer"
            - name: SqlServer__AllowDatabaseCreation
              value: "true"
            - name: SqlServer__Initialize
              value: "true"
            - name: SqlServer__SchemaOptions__AutomaticUpdatesEnabled
              value: {{ .Values.database.sql.schema.automaticUpdatesEnabled | quote }}
            - name: DATABASEUSERNAME
              value: {{ .Values.database.existingSqlServer.userName }}
            - name: DATABASEPASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.database.existingSqlServer.existingSecret }}
                  name: {{ .Values.database.existingSqlServer.existingSecret }}
                  key: DATABASEPASSWORD
                  {{- else }}
                  name: {{ include "fhir-server.fullname" . }}-existing-mssql
                  key: DATABASEPASSWORD
                  {{- end }}
            - name: DATABASENAME
              value: {{ .Values.database.existingSqlServer.databaseName }}
            - name: DATABASESERVERNAME
              value: {{ .Values.database.existingSqlServer.serverName }}
            - name: DATABASESERVERPORT
              value: {{ .Values.database.existingSqlServer.port | quote }}
            - name: SqlServer__ConnectionString
              value: "Server=tcp:$(DATABASESERVERNAME),$(DATABASESERVERPORT);Initial Catalog=$(DATABASENAME);Persist Security Info=False;User ID=$(DATABASEUSERNAME);Password=$(DATABASEPASSWORD);MultipleActiveResultSets=False;Connection Timeout=30"
            {{- end }}
            {{- if eq .Values.database.dataStore "CosmosDb" }}
            - name: DataStore
              value: "CosmosDb"
            - name: CosmosDb__Host
              valueFrom:
                secretKeyRef:
                  name: {{ include "fhir-server.fullname" . }}
                  key: primaryEndpoint
            - name: CosmosDb__Key
              valueFrom:
                secretKeyRef:
                  name: {{ include "fhir-server.fullname" . }}
                  key: primaryMasterKey
            - name: FhirServer__CosmosDb__InitialCollectionThroughput
              value: {{ .Values.database.cosmosDb.initialCollectionThroughput | quote }}
            {{- if .Values.database.cosmosDb.databaseId }}
            - name: CosmosDb__DatabaseId
              value: {{ .Values.database.cosmosDb.databaseId }}
            {{- end }}
            {{- if .Values.database.cosmosDb.collectionId }}
            - name: FhirServer__CosmosDb__CollectionId
              value: {{ .Values.database.cosmosDb.collectionId }}
            {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.serviceMonitor.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/check
              port: http
            failureThreshold: 12
            periodSeconds: 20
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /health/check
              port: http
            timeoutSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
