# Default values for fhir-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: mcr.microsoft.com/healthcareapis
  repository: r4-fhir-server
  tag: latest
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podIdentity:
  enabled: false
  # identityClientId: my-id
  # identityResourceId: my-identity-resource-id

convertData:
  enabled: false

export:
  enabled: false
  blobStorageUri: https://mystorageaccount.blob.core.windows.net

reindex:
  enabled: false

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

database:
  # options: ExistingSqlServer, SqlServer, SqlContainer, CosmosDb
  dataStore: "SqlServer"
  resourceGroup: ""
  location: ""
  sql:
    # 0: Basic
    # 1: Business
    # 2: BusinessCritical
    # 3: DataWarehouse
    # 4: Free
    # 5: GeneralPurpose
    # 6: Hyperscale
    # 7: Premium
    # More at https://godoc.org/github.com/Azure/azure-sdk-for-go/services/preview/sql/mgmt/2015-05-01-preview/sql#DatabaseEdition
    edition: 5
    maxPoolSize: 100
    schema:
      automaticUpdatesEnabled: true
  cosmosDb:
    initialCollectionThroughput: "400"
    # databaseId: health
    # collectionId: fhir
  sqlContainer:
    # Accept EULA when deploying with --set database.sqlContainer.acceptEula="Y"
    acceptEula: "n"
    edition: "Developer"
    image:
      registry: mcr.microsoft.com
      repository: mssql/server
      tag: 2019-latest
      pullPolicy: IfNotPresent
    replicaCount: 1
    port: 1433
    databaseName: FHIR
    userName: sa
    resources: {}
    persistence:
      storageClass: default
      size: 8Gi
      annotations: {}
        # "helm.sh/resource-policy": keep
    securityContext: {}
    podSecurityContext:
      # mssql container has user mssql defined with id 10001
      runAsUser: 10001
      runAsGroup: 10001
      fsGroup: 10001
  existingSqlServer:
    userName: sa
    databaseName: FHIR
    serverName: mymssql-mssql-linux.default
    password: fhir
    # name of a pre-created secret to retrieve the SQL Server's password.
    # the secret must have a key named `DATABASEPASSWORD` with the password as its value.
    existingSecret: ""
    port: 1433

appInsights:
  secretKey: "instrumentationKey"
#  secretName: "cluster-app-insights"

serviceMonitor:
  enabled: false
  port: 1234
  labels: {}
    # prometheus: monitor
  interval: 30s
  dotnetRuntimeMetrics: true
  httpMetrics: true
  systemMetrics: true

security:
  enabled: false
  enableAadSmartOnFhirProxy: false
  authority: null
  audience: null

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: ["/"]
      pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
