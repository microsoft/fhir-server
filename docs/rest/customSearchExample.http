# Example of setting up new search parameters, running reindex, and using the new search parameters.

@hostname = localhost:44348

### Test rest client
https://{{hostname}}/metadata

### Get the bearer token, if authentication is enabled
# @name bearer
POST https://{{hostname}}/connect/token
content-type: application/x-www-form-urlencoded

grant_type=client_credentials
&client_id=globalAdminServicePrincipal
&client_secret=globalAdminServicePrincipal
&scope=fhir-api

### POST new patient, this patient has a race value which can be indexed with the new Search parameter below
# @name patient
POST https://{{hostname}}/Patient
content-type: application/json
Authorization: Bearer {{bearer.response.body.access_token}}

< ./Data/CustomSearchPatient.json

### Create a new SearchParameter resource, this is copied from US Core race
POST https://{{hostname}}/SearchParameter
content-type: application/json
Authorization: Bearer {{bearer.response.body.access_token}}

< ./Data/CustomSearchSearchParameter.json

### Another search parameter example, this is based on the the definition for the id parameter
# it has a base type of Resource, so it applies to all resources in the server
POST https://{{hostname}}/SearchParameter
content-type: application/json
Authorization: Bearer {{bearer.response.body.access_token}}

< .\Data\CustomSearchSearchParameter2.json

### Composite custom search parameter (this test data requires R4 or higher)
POST https://{{hostname}}/SearchParameter
content-type: application/json
Authorization: Bearer {{bearer.response.body.access_token}}

< ./Data/CompositeCustomSearchParameter.json

###  This creates a reindex job, you can do this now, or you can skip below to see if you can search
# using the new search parameter before it is indexed
# @name reindex
POST https://{{hostname}}/$reindex
content-type: application/json
Authorization: Bearer {{bearer.response.body.access_token}}

{
  "resourceType": "Parameters",
  "parameter": [
    {
      "name": "maximumConcurrency",
      "valueInteger": "3"
    },
    {
      "name": "targetDataStoreUsagePercentage",
      "valueInteger": "80"
    },
    {
      "name": "queryDelayIntervalInMilliseconds",
      "valueInteger": "500"
    },
    {
      "name": "maximumNumberOfResourcesPerQuery",
      "valueInteger": "5"
    }
  ]
}

### Check the status of your reindex job
GET {{reindex.response.headers.Content-Location}}
Authorization: Bearer {{bearer.response.body.access_token}}

### Test your new search parameter to see what values it will return
# This will extract and return the extracted values so you can see them
# but it will not persist the extracted value to the DB
GET https://{{hostname}}/Patient/{{patient.response.body.id}}/$reindex
Authorization: Bearer {{bearer.response.body.access_token}}

### if you want to test a single resource being indexed, use the same url as above
# but with a POST to commit the new indices to the DB
POST https://{{hostname}}/Patient/{{patient.response.body.id}}/$reindex
Authorization: Bearer {{bearer.response.body.access_token}}


### Try searching by race
# if you have not yet reindexed, this should not work :)
GET https://{{hostname}}/Patient?race=2028-9
Authorization: Bearer {{bearer.response.body.access_token}}

### If you have not yet fully reindexed, but have used the POST to reindex
# a single resource and you want to test it, use the following query
# with the patient indices header
GET https://{{hostname}}/Patient?race=2028-9
Authorization: Bearer {{bearer.response.body.access_token}}
x-ms-use-partial-indices: true

### A search query showing the Composite custom search parameter with Use/Postcode pair.
# The usecase would be to evaluate multiple values together in chained search queries
GET https://{{hostname}}/Patient?address-use-postcode=home$74047
Authorization: Bearer {{bearer.response.body.access_token}}