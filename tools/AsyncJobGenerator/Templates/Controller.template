// -------------------------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License (MIT). See LICENSE in the repo root for license information.
// -------------------------------------------------------------------------------------------------

using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Health.Api.Features.Audit;
using Microsoft.Health.Fhir.Api.Features.Filters;
using Microsoft.Health.Fhir.Api.Features.Routing;
using Microsoft.Health.Fhir.ValueSets;

namespace Microsoft.Health.Fhir.Api.Controllers
{
    [ServiceFilter(typeof(AuditLoggingFilterAttribute))]
    [ServiceFilter(typeof(OperationOutcomeExceptionFilterAttribute))]
    [ValidateModelState]
    public class <JobName>Controller : Controller
    {
        public <JobName>Controller() { }

        [HttpGet]
        [Route(KnownRoutes.<JobName>)]
        [AuditEventType(AuditEventSubType.<JobName>)]
        public async Task<IActionResult> <JobName>() { }

        [HttpGet]
        [Route(KnownRoutes.<JobName>ResourceType)]
        [AuditEventType(AuditEventSubType.<JobName>)]
        public async Task<IActionResult> <JobName>ByResourceType() { }

        [HttpGet]
        [Route(KnownRoutes.<JobName>ResourceTypeById)]
        [AuditEventType(AuditEventSubType.<JobName>)]
        public async Task<IActionResult> <JobName>ByResourceTypeAndId() { }

        [HttpGet]
        [Route(KnownRoutes.<JobName>JobLocation, Name = RouteNames.Get<JobName>StatusById)]
        [AuditEventType(AuditEventSubType.Export)]
        public async Task<IActionResult> Get<JobName>StatusById(string idParameter) { }

        [HttpDelete]
        [Route(KnownRoutes.<JobName>JobLocation, Name = RouteNames.Cancel<JobName>)]
        [AuditEventType(AuditEventSubType.Export)]
        public async Task<IActionResult> Cancel<JobName>(string idParameter) { }
    }
}
