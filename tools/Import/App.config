<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <!--
  This code allows to import resources to FHIR service.
  Input data must be provided in ndjson format in one container in Azure blobs storage. 
  Performance:
    This client code was tested on gen1 FHIR with Cosmos DB in the backend.
    It allows to import 2.4 billion resources per day (28K resources/second).
  Prerequisites:
    Cosmos DB is scaled up to >1M RUs/second.
    There are >100K ACUs in app service (test was run on 4 endpoins with 30 P3V2 VMs each).
    Client VM is in Azure in the same datacenter as FHIR service and Cosmos DB. It should have >=16 CPUs and >=100GB RAM.
    Parameters below are set for high scale case. Lower values can be chosen for lower scale.
  -->
  <appSettings>
    <!-- Azure blob storage parameters -->
    <add key="ConnectionString" value="Connection string to Azure blob storage" />
    <add key="ContainerName" value="Container name which contains files in ndjson format" />
    <!-- FHIR endpoints. Secondary endpoints are optional. They can be used to increase import throughput -->
    <add key="FhirEndpoint" value="https:/(your fhir app service).azurewebsites.net" />
    <add key="FhirEndpoint2" value="" />
    <add key="FhirEndpoint3" value="" />
    <add key="FhirEndpoint4" value="" />
    <!-- Code is processing blobs in ranges. 
    If blobs are grouped in subdirectories with close number of resources per subdirectory, set this value to number of blobs in subdirectory. -->
    <add key="BlobRangeSize" value="19" />
    <add key="ReadThreads" value="20" />
    <add key="WriteThreads" value="10000" />
    <add key="NumberOfBlobsToSkip" value="0" />
    <!-- To load all blobs in container MaxBlobIndexForImport can be set to 0. MaxBlobIndexForImport is 1-based.-->
    <add key="MaxBlobIndexForImport" value="10000" />
    <add key="ReportingPeriodSec" value="30" />
    <add key="MaxRetries" value="10" />
    <add key="UseStringJsonParser" value="true" />
    <!-- UseStringJsonParserCompare allows to compare results of lightweight string parser with convert to JObject. 
         It takes affect only if string parser is enabled. Use true only for test purposes. -->
    <add key="UseStringJsonParserCompare" value="false" />
  </appSettings>
</configuration>
