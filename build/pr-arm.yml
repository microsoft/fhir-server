# DESCRIPTION:
# Validates the ARM templates in the event of changes

pr:
  branches:
    include:
    - main
  paths:
    include:
    - samples/templates

trigger: none

variables:
- template: pr-variables.yml
- template: build-variables.yml

# Note: ARMory currently only works on Windows
pool:
  vmImage: 'windows-latest'

steps:
  - task: AzureResourceManagerTemplateDeployment@3
    displayName: 'Validate ARM Template (Docker)'
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: '$(ConnectedServiceName)'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(ResourceGroupName)'
      location: '$(ResourceGroupRegion)'
      templateLocation: 'Linked artifact'
      csmFile: '$(Build.Repository.LocalPath)/samples/templates/default-azuredeploy-docker.json'
      overrideParameters: '-serviceName "$(appServicePlanName)"'
      deploymentMode: 'Validation'
      deploymentName: 'ValidateFhirDocker$(prName)'
      
  - task: AzureResourceManagerTemplateDeployment@3
    displayName: 'Validate ARM Template (Web deploy)'
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: '$(ConnectedServiceName)'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(ResourceGroupName)'
      location: '$(ResourceGroupRegion)'
      templateLocation: 'Linked artifact'
      csmFile: '$(Build.Repository.LocalPath)/samples/templates/default-azuredeploy.json'
      overrideParameters: '-serviceName "$(appServicePlanName)"'
      deploymentMode: 'Validation'
      deploymentName: 'ValidateFhirWebDeploy$(prName)'

  - template: ./jobs/analyze.yml
    parameters:
      analyzeBinaries: false
      analyzePackages: false
      runAntiMalware: false
      credScanDirectory: '$(Build.Repository.LocalPath)/samples/templates'
