# DESCRIPTION: 	
# Builds, tests, and packages the solution for all PR requests.	

trigger: none

variables:
- template: pr-variables.yml
- template: build-variables.yml

stages:
- stage: UpdateVersion
  displayName: 'Determine Semver'
  dependsOn: []
  jobs:
  - job: Semver
    pool:
      name: '$(DefaultLinuxPool)'
      vmImage: '$(LinuxVmImage)'
    steps:
    - template: ./jobs/update-semver.yml  
    - powershell: |
        $buildNumber = "$(semVer)".replace(".", "").replace("-", "")
        $buildNumber = $buildNumber.subString(0, [System.Math]::Min(15, $buildNumber.Length))

        Write-Host "##vso[build.updatebuildnumber]$buildNumber" 
        Write-Host "Updated  build number to '$buildNumber"
      name: SetBuildVersion
 
- stage: BuildArtifacts
  displayName: 'Build artifacts'
  dependsOn:
  - UpdateVersion
  variables:
    assemblySemVer: $[stageDependencies.UpdateVersion.Semver.outputs['SetVariablesFromGitVersion.assemblySemVer']]
    assemblySemFileVer: $[stageDependencies.UpdateVersion.Semver.outputs['SetVariablesFromGitVersion.assemblySemFileVer']]
    informationalVersion: $[stageDependencies.UpdateVersion.Semver.outputs['SetVariablesFromGitVersion.informationalVersion']]
    majorMinorPatch: $[stageDependencies.UpdateVersion.Semver.outputs['SetVariablesFromGitVersion.majorMinorPatch']]
    nuGetVersion: $[stageDependencies.UpdateVersion.Semver.outputs['SetVariablesFromGitVersion.nuGetVersion']]
  jobs:
  - job: Linux_BuildAndPackage
    pool:
      name: '$(DefaultLinuxPool)'
      vmImage: '$(LinuxVmImage)'
    steps:
    - template: ./jobs/build.yml
      parameters:
        codeCoverage: false
        unitTest: false
        componentGovernance: true
        packageArtifacts: true
        packageIntegrationTests: true

- stage: testR4
  displayName: 'Run R4 Tests'
  dependsOn:
  - BuildArtifacts
  jobs:
  - template: ./jobs/run-tests.yml
    parameters:
      version: R4
      keyVaultName: $(DeploymentEnvironmentNameR4)
      appServiceName: $(DeploymentEnvironmentNameR4)
