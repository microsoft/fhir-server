# DESCRIPTION: 	
# Builds, tests, and packages the solution for the main branch.	

name: $(SourceBranchName)-$(Date:yyyyMMdd)$(Rev:-r)
trigger: none

variables:
- template: ci-variables.yml
- template: build-variables.yml

stages:
- stage: UpdateVersion
  displayName: 'Determine Semver'
  dependsOn: []
  jobs:
  - job: Semver
    pool:
      name: '$(DefaultLinuxPool)'
      vmImage: '$(LinuxVmImage)'
    steps:
    - template: ./jobs/update-semver.yml  

- stage: BuildUnitTests
  displayName: 'Build and run unit tests'
  dependsOn:
  - UpdateVersion
  variables:
    assemblySemVer: $[stageDependencies.UpdateVersion.Semver.outputs['SetVariablesFromGitVersion.assemblySemVer']]
    assemblySemFileVer: $[stageDependencies.UpdateVersion.Semver.outputs['SetVariablesFromGitVersion.assemblySemFileVer']]
    informationalVersion: $[stageDependencies.UpdateVersion.Semver.outputs['SetVariablesFromGitVersion.informationalVersion']]
    majorMinorPatch: $[stageDependencies.UpdateVersion.Semver.outputs['SetVariablesFromGitVersion.majorMinorPatch']]
    nuGetVersion: $[stageDependencies.UpdateVersion.Semver.outputs['SetVariablesFromGitVersion.nuGetVersion']]
  jobs:
  - job: Windows
    pool:
      vmImage: $(WindowsVmImage)
    steps:
    - template: ./jobs/build.yml
      parameters:
        packageIntegrationTests: true

  - job: Linux
    pool:
      name: '$(DefaultLinuxPool)'
      vmImage: '$(LinuxVmImage)'
    steps:
    - template: ./jobs/build.yml
      parameters:
        codeCoverage: true
        componentGovernance: true
        packageArtifacts: true

- stage: AnalyzeSecurity
  displayName: 'Run Security Analysis'
  dependsOn:
  - BuildUnitTests
  jobs:
  - job: Guardian
    pool:
      vmImage: 'windows-latest'
    steps:
    - template: ./jobs/analyze.yml

- stage: DockerBuild  
  displayName: 'Build images'
  dependsOn:
  - UpdateVersion
  variables:
    assemblySemFileVer: $[stageDependencies.UpdateVersion.Semver.outputs['SetVariablesFromGitVersion.assemblySemFileVer']]
  jobs:
  - template: ./jobs/docker-build-all.yml
    parameters: 
      tag: $(ImageTag)

- stage: redeployStu3
  displayName: 'Redeploy STU3 Site'
  dependsOn:
  - DockerBuild
  jobs:
  - template: ./jobs/redeploy-webapp.yml
    parameters: 
      version: Stu3
      webAppName: $(DeploymentEnvironmentName)
      subscription: $(ConnectedServiceName)
      imageTag: $(ImageTag)

- stage: redeployStu3Sql
  displayName: 'Redeploy STU3 SQL Site'
  dependsOn:
  - DockerBuild
  jobs:
  - template: ./jobs/redeploy-webapp.yml
    parameters: 
      version: Stu3
      webAppName: $(DeploymentEnvironmentNameSql)
      subscription: $(ConnectedServiceName)
      imageTag: $(ImageTag)

- stage: redeployR4
  displayName: 'Redeploy R4 Site'
  dependsOn:
  - DockerBuild
  jobs:
  - template: ./jobs/redeploy-webapp.yml
    parameters: 
      version: R4
      webAppName: $(DeploymentEnvironmentNameR4)
      subscription: $(ConnectedServiceName)
      imageTag: $(ImageTag)

- stage: redeployR4Sql
  displayName: 'Redeploy R4 SQL Site'
  dependsOn:
  - DockerBuild
  jobs:
  - template: ./jobs/redeploy-webapp.yml
    parameters: 
      version: R4
      webAppName: $(DeploymentEnvironmentNameR4Sql)
      subscription: $(ConnectedServiceName)
      imageTag: $(ImageTag)

- stage: redeployR5
  displayName: 'Redeploy R5 Site'
  dependsOn:
  - DockerBuild
  jobs:
  - template: ./jobs/redeploy-webapp.yml
    parameters: 
      version: R5
      webAppName: $(DeploymentEnvironmentNameR5)
      subscription: $(ConnectedServiceName)
      imageTag: $(ImageTag)

- stage: redeployR5Sql
  displayName: 'Redeploy R5 SQL Site'
  dependsOn:
  - DockerBuild
  jobs:
  - template: ./jobs/redeploy-webapp.yml
    parameters: 
      version: R5
      webAppName: $(DeploymentEnvironmentNameR5Sql)
      subscription: $(ConnectedServiceName)
      imageTag: $(ImageTag)

- stage: testStu3
  displayName: 'Run Stu3 Tests'
  dependsOn:
  - BuildUnitTests
  - redeployStu3
  - redeployStu3Sql
  jobs:
  - template: ./jobs/run-tests.yml
    parameters:
      version: Stu3
      keyVaultName: $(DeploymentEnvironmentName)
      appServiceName: $(DeploymentEnvironmentName)

- stage: testR4
  displayName: 'Run R4 Tests'
  dependsOn:
  - BuildUnitTests
  - redeployR4
  - redeployR4Sql
  jobs:
  - template: ./jobs/run-tests.yml
    parameters:
      version: R4
      keyVaultName: $(DeploymentEnvironmentNameR4)
      appServiceName: $(DeploymentEnvironmentNameR4)

- stage: testR5
  displayName: 'Run R5 Tests'
  dependsOn:
  - BuildUnitTests
  - redeployR5
  - redeployR5Sql
  jobs:
  - template: ./jobs/run-tests.yml
    parameters:
      version: R5
      keyVaultName: $(DeploymentEnvironmentNameR5)
      appServiceName: $(DeploymentEnvironmentNameR5)

- stage: DockerAddTag
  displayName: 'Docker add main tag'
  dependsOn:
  - testStu3
  - testR4
  - testR5
  jobs:
  - template: ./jobs/docker-add-tag.yml
    parameters:
      sourceTag: $(ImageTag)
      targetTag: 'master'

- stage: cleanStorageAccounts
  displayName: 'Clean Storage Accounts'
  dependsOn: []
  jobs:
  - template: ./jobs/clean-storage-accounts.yml
    parameters:
      environmentName: $(DeploymentEnvironmentName)
