steps:
- task: AzureKeyVault@1
  displayName: 'Azure Key Vault: resolute-oss-tenant-info'
  inputs:
    azureSubscription: $(ConnectedServiceName)
    KeyVaultName: 'resolute-oss-tenant-info'

- task: AzurePowerShell@5
  displayName: Setup AAD Test Environment
  inputs:
    azureSubscription: $(ConnectedServiceName)
    azurePowerShellVersion: latestVersion
    ScriptType: inlineScript
    Inline: |
      # Install only required Microsoft Graph modules for better performance
      # Use AllowClobber to handle any version conflicts
      Install-Module -Name Microsoft.Graph.Authentication -Force -Scope CurrentUser -AllowClobber
      Install-Module -Name Microsoft.Graph.Applications -Force -Scope CurrentUser -AllowClobber
      Install-Module -Name Microsoft.Graph.Users -Force -Scope CurrentUser -AllowClobber
      Install-Module -Name Microsoft.Graph.Identity.DirectoryManagement -Force -Scope CurrentUser -AllowClobber
      Install-Module -Name Microsoft.PowerShell.SecretManagement -Force -Scope CurrentUser -AllowClobber

      $module = Get-Module -Name Microsoft.Graph.Authentication
      Write-Host $module.version

      $tenantId = "$(tenant-id)"

      # Set up Microsoft Graph authentication
      $username = "$(tenant-admin-service-principal-name)"
      $clientId = "$(tenant-admin-service-principal-id)"
      $password_raw =  "$(tenant-admin-service-principal-password)"
      $password =  ConvertTo-SecureString -AsPlainText $password_raw -Force
      $clientSecretCredential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $clientId, $password

      # If a deleted keyvault with purge protection exists, try to restore it.
      $environmentName = "$(DeploymentEnvironmentName)".ToLower() -replace "\.", "" 
      Write-Host "Installed module and set variables"

      $vaultName = "${environmentName}-ts"
      $vaultLocation = "westus"
      $vaultResourceGroupName = "$(ResourceGroupName)"
      if (Get-AzKeyVault -VaultName $vaultName -Location $vaultLocation -InRemovedState)
      {
          Write-Host "Attempting to restore vault ${vaultName}"

          Undo-AzKeyVaultRemoval -VaultName $vaultName -ResourceGroupName $vaultResourceGroupName -Location $vaultLocation
          Write-Host "KeyVault $vaultName is restored"
      }
      Write-Host "Restored keyvaults"

      # Connect to Microsoft Graph using client credentials
      Write-Host "Connecting to Microsoft Graph"
      Connect-MgGraph -TenantId $tenantId -ClientSecretCredential $clientSecretCredential

      Write-Host "Connected to Microsoft Graph"
      Import-Module $(System.DefaultWorkingDirectory)/samples/scripts/PowerShell/FhirServer/FhirServer.psd1
      Import-Module $(System.DefaultWorkingDirectory)/release/scripts/PowerShell/FhirServerRelease/FhirServerRelease.psd1

      Write-Host "Imported modules"
      $output = Add-AadTestAuthEnvironment -TestAuthEnvironmentPath $(System.DefaultWorkingDirectory)/testauthenvironment.json -EnvironmentName $environmentName -ResourceGroupName $(ResourceGroupName) -TenantAdminCredential $clientSecretCredential -TenantId $tenantId -ClientId $clientId -ClientSecret $password
