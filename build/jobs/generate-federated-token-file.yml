parameters:
- name: serviceConnectionName
  type: string

steps:
- task: AzurePowerShell@5
  displayName: Generate Federated Token File
  inputs:
    azureSubscription: ${{ parameters.serviceConnectionName }}
    azurePowerShellVersion: latestVersion
    ScriptType: inlineScript
    Inline: |
      # Request fresh idToken
      Invoke-RestMethod -Headers @{
                        Authorization  = "Bearer $(System.AccessToken)"
                        'Content-Type' = 'application/json'
                      } `
                      -Uri "${env:SYSTEM_OIDCREQUESTURI}?api-version=7.1&serviceConnectionId=${env:AZURESUBSCRIPTION_SERVICE_CONNECTION_ID}" `
                      -Method Post `
                      | Select-Object -ExpandProperty oidcToken
                      | Set-Variable idToken

      # Write token to file
      $env:AZURE_FEDERATED_TOKEN_FILE = "$(Agent.TempDirectory)/azToken.txt"
      $idToken | Out-File -FilePath $env:AZURE_FEDERATED_TOKEN_FILE
      
      # Set the Azure DevOps output variable
      Write-Output "##vso[task.setvariable variable=AZURE_FEDERATED_TOKEN_FILE]$env:AZURE_FEDERATED_TOKEN_FILE"

      $clientId = (Get-AzContext).Account.Id
      $tenantId = (Get-AzContext).Tenant.Id

      # Write others things
      Write-Output "##vso[task.setvariable variable=AZURE_CLIENT_ID]$clientId"
      Write-Output "##vso[task.setvariable variable=AZURE_TENANT_ID]$tenantId"