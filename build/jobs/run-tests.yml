parameters:
- name: version
  type: string
- name: keyVaultName
  type: string
- name: appServiceName
  type: string
jobs:
- job: "integrationTests"
  pool:
    vmImage: '$(WindowsVmImage)'
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      downloadPath: '$(System.ArtifactsDirectory)'
      artifactName: 'IntegrationTests'
  
  - task: ExtractFiles@1
    displayName: 'Extract Integration Test Binaries'
    inputs:
      archiveFilePatterns: '$(System.ArtifactsDirectory)/IntegrationTests/Microsoft.Health.Fhir.${{ parameters.version }}.Tests.Integration.zip'
      destinationFolder: '$(Agent.TempDirectory)/IntegrationTests/'

  - task: UseDotNet@2
    inputs:
      useGlobalJson: true

  - task: AzureKeyVault@1
    displayName: 'Azure Key Vault: ${{ parameters.keyVaultName }}'
    inputs:
      azureSubscription: $(ConnectedServiceName)
      KeyVaultName: '${{ parameters.keyVaultName }}'

  - task: AzureKeyVault@1
    displayName: 'Azure Key Vault: ${{ parameters.keyVaultName }}-sql'
    inputs:
      azureSubscription: $(ConnectedServiceName)
      KeyVaultName: '${{ parameters.keyVaultName }}-sql'

  - task: VSTest@3
    displayName: 'Run Integration Tests'
    inputs:
      testSelector: 'testAssemblies' # Required. Select tests using. Default: testAssemblies.
      testAssemblyVer2: '**/*${{ parameters.version }}.Tests.Integration*.dll' # Required when testSelector = testAssemblies. Test files.
      searchFolder: '$(Agent.TempDirectory)/IntegrationTests/' # Required. Search folder. Default: $(System.DefaultWorkingDirectory).
      testRunTitle: '${{ parameters.version }} Integration' # Optional. Test run title.
      rerunFailedTests: true
      rerunType: 'basedOnTestFailurePercentage'
      rerunFailedThreshold: 10
      customBatchSizeValue: 3000
    env:
      'CosmosDb:Host': $(CosmosDb--Host)
      'CosmosDb:Key': $(CosmosDb--Key)
      'SqlServer:ConnectionString': $(SqlServer--ConnectionString)

- job: 'cosmosE2eTests'
  dependsOn: []
  pool:
    vmImage: '$(WindowsVmImage)'
  steps:
  - template: e2e-setup.yml
  - template: e2e-tests.yml
    parameters:
      version: ${{ parameters.version }}
      appServiceName: ${{ parameters.appServiceName }}
      appServiceType: 'CosmosDb'

- job: 'sqlE2eTests'
  dependsOn: []
  pool:
    vmImage: '$(WindowsVmImage)'
  steps:
  - template: e2e-setup.yml
  - template: e2e-tests.yml
    parameters:
      version: ${{ parameters.version }}
      appServiceName: '${{ parameters.appServiceName }}-sql'
      appServiceType: 'SqlServer'
