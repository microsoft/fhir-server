steps:
  - checkout: none

  - task: UseDotNet@2
    inputs:
      useGlobalJson: true

  # Download all coverage artifacts from all test stages
  - task: DownloadPipelineArtifact@2
    displayName: 'Download all coverage artifacts'
    inputs:
      path: '$(Pipeline.Workspace)/AllCoverage'
      patterns: |
        UnitTestsCoverage/**
        CosmosIntegrationTestsCoverage_*/**
        SqlIntegrationTestsCoverage_*/**
        E2ETestsCoverage_*/**

  # Aggregate all coverage files into a single report
  - task: reportgenerator@5
    displayName: 'Aggregate all coverage reports'
    inputs:
      reports: '$(Pipeline.Workspace)/AllCoverage/**/Cobertura.xml'
      reporttypes: 'Cobertura;HtmlInline_AzurePipelines'
      targetdir: '$(Pipeline.Workspace)/AggregatedCoverage'
      sourcedirs: '$(Build.SourcesDirectory)'

  # Publish the aggregated coverage artifact
  - task: PublishBuildArtifacts@1
    displayName: 'Publish aggregated coverage artifact'
    inputs:
      pathToPublish: '$(Pipeline.Workspace)/AggregatedCoverage'
      artifactName: 'AggregatedCodeCoverage'
      artifactType: 'container'

  # Publish to Azure DevOps for pipeline UI visualization
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish aggregated code coverage to pipeline'
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Pipeline.Workspace)/AggregatedCoverage/Cobertura.xml'
      reportDirectory: '$(Pipeline.Workspace)/AggregatedCoverage'
      failIfCoverageEmpty: false
